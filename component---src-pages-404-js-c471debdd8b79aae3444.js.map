{"version":3,"file":"component---src-pages-404-js-c471debdd8b79aae3444.js","mappings":"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","sources":["webpack://cardoso-leandro-portfolio/./src/images/404.png","webpack://cardoso-leandro-portfolio/./src/pages/404.js","webpack://cardoso-leandro-portfolio/./node_modules/@chakra-ui/button/dist/chunk-T6ZDZOLO.mjs","webpack://cardoso-leandro-portfolio/./node_modules/@chakra-ui/button/dist/chunk-3RENZ2UO.mjs","webpack://cardoso-leandro-portfolio/./node_modules/@chakra-ui/button/dist/chunk-QB2Y5VKH.mjs","webpack://cardoso-leandro-portfolio/./node_modules/@chakra-ui/react-use-merge-refs/dist/index.mjs","webpack://cardoso-leandro-portfolio/./node_modules/@chakra-ui/button/dist/chunk-UVUR7MCU.mjs","webpack://cardoso-leandro-portfolio/./node_modules/@chakra-ui/button/dist/chunk-J37R6SZE.mjs","webpack://cardoso-leandro-portfolio/./node_modules/@chakra-ui/image/dist/chunk-X3PS6RUF.mjs","webpack://cardoso-leandro-portfolio/./node_modules/@chakra-ui/image/dist/chunk-SPIKMR6I.mjs","webpack://cardoso-leandro-portfolio/./node_modules/@chakra-ui/image/dist/chunk-QINAG4RG.mjs","webpack://cardoso-leandro-portfolio/./node_modules/@chakra-ui/layout/dist/chunk-5MKCW436.mjs","webpack://cardoso-leandro-portfolio/./node_modules/@chakra-ui/layout/dist/chunk-PULVB27S.mjs"],"sourcesContent":["export default __webpack_public_path__ + \"static/404-3912ebd716a97b5c9db211c40b244a22.png\";","import * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport { Box, Container, Button, Image } from \"@chakra-ui/react\";\nimport notFound from \"../images/404.png\";\n\nconst NotFoundPage = () => {\n  return (\n    <main>\n      <Container p={\"3em\"}>\n        <Image src={notFound} />\n        <Box my={6} align=\"center\">\n          <Link to=\"/\">\n            <Button to=\"/\" colorScheme=\"green\">\n              Go home\n            </Button>\n          </Link>\n        </Box>\n      </Container>\n    </main>\n  );\n};\n\nexport default NotFoundPage;\n","'use client'\n\n// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\nexport {\n  ButtonGroupProvider,\n  useButtonGroup\n};\n//# sourceMappingURL=chunk-T6ZDZOLO.mjs.map","'use client'\n\n// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      display: \"inline-flex\",\n      alignSelf: \"center\",\n      flexShrink: 0,\n      ...rest,\n      className: _className,\n      children: _children\n    }\n  );\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\nexport {\n  ButtonIcon\n};\n//# sourceMappingURL=chunk-3RENZ2UO.mjs.map","'use client'\n\n// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ jsx(Spinner, { color: \"currentColor\", width: \"1em\", height: \"1em\" }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css\n    }),\n    [__css, label, marginProp, spacing]\n  );\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, __css: spinnerStyles, children });\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\nexport {\n  ButtonSpinner\n};\n//# sourceMappingURL=chunk-QB2Y5VKH.mjs.map","'use client'\n\n// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n//# sourceMappingURL=index.mjs.map","'use client'\nimport {\n  useButtonType\n} from \"./chunk-J37R6SZE.mjs\";\nimport {\n  useButtonGroup\n} from \"./chunk-T6ZDZOLO.mjs\";\nimport {\n  ButtonIcon\n} from \"./chunk-3RENZ2UO.mjs\";\nimport {\n  ButtonSpinner\n} from \"./chunk-QB2Y5VKH.mjs\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ jsxs(\n    chakra.button,\n    {\n      ref: useMergeRefs(ref, _ref),\n      as,\n      type: type != null ? type : defaultType,\n      \"data-active\": dataAttr(isActive),\n      \"data-loading\": dataAttr(isLoading),\n      __css: buttonStyles,\n      className: cx(\"chakra-button\", className),\n      ...rest,\n      disabled: isDisabled || isLoading,\n      children: [\n        isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--start\",\n            label: loadingText,\n            placement: \"start\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        ),\n        isLoading ? loadingText || /* @__PURE__ */ jsx(chakra.span, { opacity: 0, children: /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }) }) : /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }),\n        isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--end\",\n            label: loadingText,\n            placement: \"end\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        )\n      ]\n    }\n  );\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    leftIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginEnd: iconSpacing, children: leftIcon }),\n    children,\n    rightIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginStart: iconSpacing, children: rightIcon })\n  ] });\n}\n\nexport {\n  Button\n};\n//# sourceMappingURL=chunk-UVUR7MCU.mjs.map","'use client'\n\n// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\nexport {\n  useButtonType\n};\n//# sourceMappingURL=chunk-J37R6SZE.mjs.map","'use client'\n\n// src/native-image.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ jsx(\"img\", { width: htmlWidth, height: htmlHeight, ref, alt, ...rest });\n});\nNativeImage.displayName = \"NativeImage\";\n\nexport {\n  NativeImage\n};\n//# sourceMappingURL=chunk-X3PS6RUF.mjs.map","'use client'\n\n// src/use-image.ts\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\nexport {\n  useImage,\n  shouldShowFallbackImage\n};\n//# sourceMappingURL=chunk-SPIKMR6I.mjs.map","'use client'\nimport {\n  NativeImage\n} from \"./chunk-X3PS6RUF.mjs\";\nimport {\n  shouldShowFallbackImage,\n  useImage\n} from \"./chunk-SPIKMR6I.mjs\";\n\n// src/image.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/src/omit.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\n\n// src/image.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar Image = forwardRef(function Image2(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || // use can opt out of fallback image\n  ignoreFallback || // if the user doesn't provide any kind of fallback we should ignore it\n  !providedFallback;\n  const status = useImage({\n    ...props,\n    crossOrigin,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ jsx(\n      chakra.img,\n      {\n        as: NativeImage,\n        className: \"chakra-image__placeholder\",\n        src: fallbackSrc,\n        ...shared\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      as: NativeImage,\n      src,\n      srcSet,\n      crossOrigin,\n      loading,\n      referrerPolicy,\n      className: \"chakra-image\",\n      ...shared\n    }\n  );\n});\nImage.displayName = \"Image\";\n\nexport {\n  Image\n};\n//# sourceMappingURL=chunk-QINAG4RG.mjs.map","'use client'\n\n// src/container.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Container = forwardRef(function Container2(props, ref) {\n  const { className, centerContent, ...rest } = omitThemingProps(props);\n  const styles = useStyleConfig(\"Container\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-container\", className),\n      ...rest,\n      __css: {\n        ...styles,\n        ...centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        }\n      }\n    }\n  );\n});\nContainer.displayName = \"Container\";\n\nexport {\n  Container\n};\n//# sourceMappingURL=chunk-5MKCW436.mjs.map","'use client'\n\n// src/box.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Box = chakra(\"div\");\nBox.displayName = \"Box\";\nvar Square = forwardRef(function Square2(props, ref) {\n  const { size, centerContent = true, ...rest } = props;\n  const styles = centerContent ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" } : {};\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      boxSize: size,\n      __css: {\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0\n      },\n      ...rest\n    }\n  );\n});\nSquare.displayName = \"Square\";\nvar Circle = forwardRef(function Circle2(props, ref) {\n  const { size, ...rest } = props;\n  return /* @__PURE__ */ jsx(Square, { size, ref, borderRadius: \"9999px\", ...rest });\n});\nCircle.displayName = \"Circle\";\n\nexport {\n  Box,\n  Square,\n  Circle\n};\n//# sourceMappingURL=chunk-PULVB27S.mjs.map"],"names":["NotFoundPage","React","Container","p","Image","src","notFound","Box","my","align","Link","to","Button","colorScheme","ButtonGroupProvider","useButtonGroup","strict","name","ButtonIcon","props","children","className","rest","_children","isValidElement","cloneElement","focusable","_className","cx","jsx","span","display","alignSelf","flexShrink","displayName","ButtonSpinner","label","placement","spacing","color","width","height","__css","marginProp","spinnerStyles","useMemo","alignItems","position","fontSize","lineHeight","div","mergeRefs","refs","node","forEach","ref","value","current","error","Error","assignRef","useMergeRefs","group","styles","isDisabled","isLoading","isActive","leftIcon","rightIcon","loadingText","iconSpacing","type","spinner","spinnerPlacement","as","buttonStyles","_focus","zIndex","appearance","justifyContent","userSelect","whiteSpace","verticalAlign","outline","_ref","defaultType","isButton","setIsButton","useState","useCallback","tagName","useButtonType","contentProps","jsxs","button","disabled","opacity","ButtonContent","Fragment","marginEnd","marginStart","NativeImage","htmlWidth","htmlHeight","alt","omit","object","keysToOmit","clone","Object","assign","key","fallbackSrc","fallback","srcSet","fit","loading","ignoreFallback","crossOrigin","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","status","onLoad","onError","sizes","setStatus","useEffect","imageRef","useRef","load","flush","img","srcset","onload","event","onerror","useImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","centerContent","flexDirection","Square","size","boxSize","flexGrow","borderRadius"],"sourceRoot":""}